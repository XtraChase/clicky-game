{"version":3,"sources":["components/Emojis/index.js","components/Wrapper/index.js","components/Title/index.js","components/Count.js","components/Phone.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","Wrapper","children","Title","Count","count","Completionist","renderer","seconds","completed","Phone","state","handleIncrement","setState","this","date","Date","now","React","Component","App","emoji","addToUsedEmojis","id","filter","map","Emojis","key","onClick","shuffleEmojis","ReactDOM","render","document","getElementById"],"mappings":"m8ZAWeA,MARf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,QAAQC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,U,MCC1CC,MAJf,SAAiBN,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMO,W,MCDzC,SAASC,EAAMR,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMO,UCMvBE,MARf,SAAeT,GACb,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,aAAb,eAAsCD,EAAMU,S,eCA5CC,EAAgB,kBAAM,4CAEtBC,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAClB,OAD2C,EAAhBC,UAGlB,kBAAC,EAAD,MAGA,mCAASD,IAuCLE,E,2MA/BbC,MAAQ,CACNN,MAAO,G,EAITO,gBAAkB,WAEhB,EAAKC,SAAS,CAAER,MAAO,EAAKM,MAAMN,MAAQ,K,wEAK1C,OACE,yBAAKT,UAAU,+BACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEA,UAAU,QACVS,MAAOS,KAAKH,MAAMN,MAClBO,gBAAiBE,KAAKF,kBAExB,kBAAC,IAAD,CACEhB,UAAU,YACVmB,KAAMC,KAAKC,MAAQ,IACnBV,SAAUA,U,GA1BFW,IAAMC,W,QCuDXC,G,iNA/DbT,MAAQ,CACNU,QACAhB,MAAO,G,EAGTiB,gBAAkB,SAAAC,GAEhB,IAAMF,EAAQ,EAAKV,MAAMU,MAAMG,QAAO,SAAAH,GAAK,OAAIA,EAAME,KAAOA,KAE5D,EAAKV,SAAS,CAAEQ,W,EAIlBT,gBAAkB,WAEhB,EAAKC,SAAS,CAAER,MAAO,EAAKM,MAAMN,MAAQ,K,wEAelC,IAAD,OAGP,OACE,kBAAC,EAAD,KACE,kBAACF,EAAD,mBACA,qIAIA,kBAAC,EAAD,MAIA,yBAAKP,UAAU,mBACZkB,KAAKH,MAAMU,MAAMI,KAAI,SAAAJ,GAAK,OACzB,kBAACK,EAAD,CACEH,GAAIF,EAAME,GACVI,IAAKN,EAAME,GACXzB,KAAMuB,EAAMvB,KACZE,MAAOqB,EAAMrB,MACbY,gBAAiB,EAAKA,gBACtBgB,SACG,EAAKhB,gBAAiB,EAAKiB,cAAe,EAAKP,4B,GAvD9CH,c,MCHlBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.34257eb7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"img-container\">\n      <img className=\"emoji\" alt={props.name} src={props.image} />\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nfunction subTitle(props) {\n  return <h2 className=\"sub-title\">{props.children}</h2>;\n}\n\nexport { Title, subTitle };\n","import React from \"react\";\r\n\r\nfunction Count(props) {\r\n  return (\r\n    <div className=\"card-body\">\r\n      <p className=\"card-text\">High Score: {props.count}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Count;\r\n","import React from \"react\";\nimport Count from \"./Count\";\nimport \"./Phone.css\";\nimport Countdown from \"react-countdown-now\";\n\nconst Completionist = () => <span>Times Up!</span>;\n\nconst renderer = ({ seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return <span>0:{seconds}</span>;\n  }\n};\n\n// By extending the React.Component class, Phoneinherits functionality from it\nclass Phone extends React.Component {\n  // Setting the initial state of the Phone\n  component;\n  state = {\n    count: 0\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className=\"card text-center smartphone\">\n        <div className=\"content\">\n          <Count\n            className=\"count\"\n            count={this.state.count}\n            handleIncrement={this.handleIncrement}\n          />\n          <Countdown\n            className=\"countdown\"\n            date={Date.now() + 30000}\n            renderer={renderer}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Phone;\n","import React, { Component } from \"react\";\nimport Emojis from \"./components/Emojis\";\nimport Wrapper from \"./components/Wrapper\";\nimport { Title, subTitle } from \"./components/Title\";\nimport Phone from \"./components/Phone\";\nimport emoji from \"./emoji.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.emoji to the emoji json array\n  state = {\n    emoji,\n    count: 0\n  };\n\n  addToUsedEmojis = id => {\n    // Filter this.state.emoji for emoji with an id not equal to the id being removed\n    const emoji = this.state.emoji.filter(emoji => emoji.id !== id);\n    // Set this.state.emoji equal to the new emoji array\n    this.setState({ emoji });\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // shuffleEmojis = emoji => {\n  //   let i = emoji.length - 1;\n  //   for (; i > 0; i--) {\n  //     const j = Math.floor(Math.random() * (i + 1));\n  //     const temp = emoji[i];\n  //     emoji[i] = emoji[j];\n  //     emoji[j] = temp;\n  //   }\n  //   return emoji;\n  // };\n\n  // Map over this.state.emoji and render a Emojis component for each emoji object\n  render() {\n    // const shuffledEmojis = shuffleEmojis(this.state.emoji);\n\n    return (\n      <Wrapper>\n        <Title>Emoji Game</Title>\n        <subTitle>\n          You have 30 seconds to reply! Use as many emojis as you can without\n          using the same emoji twice!\n        </subTitle>\n        <Phone />\n        {/* <div className=\"card-body\">\n          <p className=\"card-text\">Count: {this.count}</p>\n        </div> */}\n        <div className=\"emoji-container\">\n          {this.state.emoji.map(emoji => (\n            <Emojis\n              id={emoji.id}\n              key={emoji.id}\n              name={emoji.name}\n              image={emoji.image}\n              handleIncrement={this.handleIncrement}\n              onClick={\n                (this.handleIncrement, this.shuffleEmojis, this.addToUsedEmojis)\n              }\n            />\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}