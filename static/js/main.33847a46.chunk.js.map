{"version":3,"sources":["components/Emojis/index.js","components/Wrapper/index.js","components/Title/index.js","components/SubTitle/index.js","components/Phone/index.js","App.js","index.js"],"names":["Emojis","props","className","alt","name","src","image","Wrapper","children","Title","SubTitle","Completionist","renderer","seconds","completed","alert","window","location","reload","Phone","this","highScore","date","Date","now","Component","App","state","emoji","count","clicked","shuffleEmojis","emojiArray","i","length","j","Math","floor","random","temp","console","log","handleIncrement","setState","map","onClick","id","key","value","ReactDOM","render","document","getElementById"],"mappings":"q9ZAWeA,MARf,SAAgBC,GACd,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,QAAQC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,U,aCC1CC,MAJf,SAAiBN,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMO,W,MCG1BC,MAJf,SAAeR,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMO,W,MCGvBE,MAJf,SAAkBT,GAChB,OAAO,wBAAIC,UAAU,aAAaD,EAAMO,W,QCApCG,G,MAAgB,kBAAM,6CAEtBC,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAClB,OAD2C,EAAhBC,WAEzBC,MAAM,aACNC,OAAOC,SAASC,SAET,kBAAC,EAAD,OAGA,mCAASL,IAwBLM,E,iLAhBX,OACE,yBAAKjB,UAAU,+BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,cAAf,eAAyCkB,KAAKnB,MAAMoB,WACpD,yBAAKnB,UAAU,aACb,kBAAC,IAAD,CAAWoB,KAAMC,KAAKC,MAAQ,IAAOZ,SAAUA,KAEjD,6BACA,yBAAKV,UAAU,iBAAf,6B,GAXUuB,aCiFLC,G,iNAzFbC,MAAQ,CACNC,QACAC,MAAO,EACPR,UAAW,EACXS,SAAS,G,EAYXC,cAAgB,SAAAH,GAGd,IAFA,IAAII,EAAa,EAAKL,MAAMC,MACxBK,EAAID,EAAWE,OAAS,EACrBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAWC,GACxBD,EAAWC,GAAKD,EAAWG,GAC3BH,EAAWG,GAAKI,EAElB,OAAOX,G,EAkBTE,QAAU,WACRU,QAAQC,IAAI,EAAKd,OACZ,EAAKA,MAAMG,SAKdf,MAAM,gCACNC,OAAOC,SAASC,WAJhB,EAAKwB,kBACL,EAAKX,kB,iFAvCPX,KAAKuB,UAAS,SAAAhB,GAEZ,OADAa,QAAQC,IAAId,EAAME,OACX,CAAEA,MAAOF,EAAME,MAAQ,Q,mCAmBpB,IAAD,OACPT,KAAKO,MAAME,MAAQT,KAAKO,MAAMN,UAChCD,KAAKuB,UAAS,SAAAhB,GACZ,MAAO,CAAEN,UAAW,EAAKM,MAAME,MAAOA,MAAO,MAG/CT,KAAKuB,UAAS,SAAAhB,GACZ,MAAO,CAAEE,MAAO,Q,+BAoBZ,IAAD,OAGP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,mBACA,kBAAC,EAAD,wGAKA,yBAAK3B,UAAU,mBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,mBACZkB,KAAKO,MAAMC,MAAMgB,KAAI,SAAAhB,GAAK,OACzB,4BAAQ1B,UAAU,YAAY2C,QAAS,EAAKf,SAC1C,kBAAC,EAAD,CACEgB,GAAIlB,EAAMkB,GACVC,IAAKnB,EAAMkB,GACX1C,KAAMwB,EAAMxB,KACZE,MAAOsB,EAAMtB,MACb0C,MAAO,EAAKrB,MAAMG,oB,GAjFhBL,c,MCJlBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.33847a46.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Emojis(props) {\n  return (\n    <div className=\"img-container\">\n      <img className=\"emoji\" alt={props.name} src={props.image} />\n    </div>\n  );\n}\n\nexport default Emojis;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SubTitle(props) {\n  return <h2 className=\"sub-title\">{props.children}</h2>;\n}\n\nexport default SubTitle;\n","import React, { Component } from \"react\";\nimport Countdown from \"react-countdown-now\";\nimport \"./style.css\";\n\nconst Completionist = () => <span>Times Up!</span>;\n\nconst renderer = ({ seconds, completed }) => {\n  if (completed) {\n    alert(\"Times Up!\");\n    window.location.reload();\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return <span>0:{seconds}</span>;\n  }\n};\n\n// By extending the React.Component class, Phoneinherits functionality from it\nclass Phone extends Component {\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className=\"card text-center smartphone\">\n        <div className=\"content\">\n          <div className=\"high-score\">High Score: {this.props.highScore}</div>\n          <div className=\"countdown\">\n            <Countdown date={Date.now() + 30000} renderer={renderer} />\n          </div>\n          <br />\n          <div className=\"speech-bubble\">Hi! How's it going?</div>\n          {/* <div className=\"reply-speech-bubble\">...</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Phone;\n","import React, { Component } from \"react\";\nimport Emojis from \"./components/Emojis\";\nimport emoji from \"./emoji.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport SubTitle from \"./components/SubTitle\";\nimport Phone from \"./components/Phone\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.emoji to the emoji json array\n  state = {\n    emoji,\n    count: 0,\n    highScore: 0,\n    clicked: false\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement() {\n    this.setState(state => {\n      console.log(state.count);\n      return { count: state.count + 1 };\n    });\n  }\n\n  //shuffle the emojis to show a new randomized array\n  shuffleEmojis = emoji => {\n    var emojiArray = this.state.emoji;\n    let i = emojiArray.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = emojiArray[i];\n      emojiArray[i] = emojiArray[j];\n      emojiArray[j] = temp;\n    }\n    return emoji;\n  };\n\n  //reset count\n  //if count is higher than highScore then high score equalls count\n  resetCount() {\n    if (this.state.count > this.state.highScore) {\n      this.setState(state => {\n        return { highScore: this.state.count, count: 0 };\n      });\n    } else {\n      this.setState(state => {\n        return { count: 0 };\n      });\n    }\n  }\n\n  //Emoji onClick event\n  clicked = () => {\n    console.log(this.state);\n    if (!this.state.clicked) {\n      // this.setState({[event.target.id]: event.target.clicked: true });\n      this.handleIncrement();\n      this.shuffleEmojis();\n    } else {\n      alert(\"You already used that emoji!\");\n      window.location.reload();\n      // this.resetCount();\n      // this.shuffleEmojis();\n    }\n  };\n\n  render() {\n    // const shuffledEmojis = shuffleEmojis(this.state.emoji);\n\n    return (\n      <Wrapper>\n        <Title>Emoji Game</Title>\n        <SubTitle>\n          You have 30 seconds to reply! Use as many emojis as you can without\n          using the same emoji twice!\n        </SubTitle>\n\n        <div className=\"phone-container\">\n          <Phone />\n        </div>\n        <div className=\"emoji-container\">\n          {this.state.emoji.map(emoji => (\n            <button className=\"emoji-btn\" onClick={this.clicked}>\n              <Emojis\n                id={emoji.id}\n                key={emoji.id}\n                name={emoji.name}\n                image={emoji.image}\n                value={this.state.clicked}\n              />\n            </button>\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}