{"version":3,"sources":["components/Emojis/index.js","components/Wrapper/index.js","components/Title/index.js","components/CardBody.js","components/Counter.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","Wrapper","children","Title","CardBody","count","Counter","state","handleIncrement","setState","this","React","Component","App","emoji","removeEmoji","id","filter","map","Emojis","removeemoji","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"47ZAWeA,MARf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,QAAQC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,U,MCC1CC,MAJf,SAAiBN,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMO,W,MCG1BC,MAJf,SAAeR,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMO,WCevBE,MAdf,SAAkBT,GAChB,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,aAAb,UAAiCD,EAAMU,SC4B9BC,G,iNA5BbC,MAAQ,CACNF,MAAO,G,EAITG,gBAAkB,WAEhB,EAAKC,SAAS,CAAEJ,MAAO,EAAKE,MAAMF,MAAQ,K,wEAK1C,OACE,yBAAKT,UAAU,+BACb,kBAAC,EAAD,CACEA,UAAU,UACVS,MAAOK,KAAKH,MAAMF,MAClBG,gBAAiBE,KAAKF,uB,GAnBVG,IAAMC,Y,OCiDbC,G,iNA7CbN,MAAQ,CACNO,QACAT,MAAO,G,EAGTU,YAAc,SAAAC,GAEZ,IAAMF,EAAQ,EAAKP,MAAMO,MAAMG,QAAO,SAAAH,GAAK,OAAIA,EAAME,KAAOA,KAE5D,EAAKP,SAAS,CAAEK,W,EAIlBN,gBAAkB,WAEhB,EAAKC,SAAS,CAAEJ,MAAO,EAAKE,MAAMF,MAAQ,K,wEAIlC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,mBACA,kBAAC,EAAD,MAIA,yBAAKT,UAAU,mBACZc,KAAKH,MAAMO,MAAMI,KAAI,SAAAJ,GAAK,OACzB,kBAACK,EAAD,CACEC,YAAa,EAAKL,YAClBC,GAAIF,EAAME,GACVK,IAAKP,EAAME,GACXlB,KAAMgB,EAAMhB,KACZE,MAAOc,EAAMd,MACbQ,gBAAiB,EAAKA,gBACtBc,QAAS,EAAKd,2B,GAtCVI,c,MCHlBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ad2772b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"img-container\">\n      <img className=\"emoji\" alt={props.name} src={props.image} />\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\n\n// If we want a child component to update or pass data to its parent, we can create a method inside the parent for the update\n// Then bind the method to the parent, and pass it to the child as a prop\n\nfunction CardBody(props) {\n  return (\n    <div className=\"card-body\">\n      <p className=\"card-text\">Count: {props.count}</p>\n      {/* <button className=\"btn btn-primary\" onClick={props.handleIncrement}>\n        Increment\n      </button>{\" \"}\n      <button className=\"btn btn-danger\" onClick={props.handleDecrement}>\n        Decrement\n      </button> */}\n    </div>\n  );\n}\n\nexport default CardBody;\n","import React from \"react\";\nimport CardBody from \"./CardBody\";\n// import Iframe from \"react-iframe\";\nimport \"./Counter.css\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass Counter extends React.Component {\n  // Setting the initial state of the Counter component\n  state = {\n    count: 0\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className=\"card text-center smartphone\">\n        <CardBody\n          className=\"content\"\n          count={this.state.count}\n          handleIncrement={this.handleIncrement}\n        />\n        {/* <Iframe\n          url=\"/w3css/tryw3css_templates_band.htm\"\n          style=\"width:100%; border:none; height:100%;\"\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Emojis from \"./components/Emojis\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport emoji from \"./emoji.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.emoji to the emoji json array\n  state = {\n    emoji,\n    count: 0\n  };\n\n  removeEmoji = id => {\n    // Filter this.state.emoji for emoji with an id not equal to the id being removed\n    const emoji = this.state.emoji.filter(emoji => emoji.id !== id);\n    // Set this.state.emoji equal to the new emoji array\n    this.setState({ emoji });\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // Map over this.state.emoji and render a Emojis component for each emoji object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Emoji Game</Title>\n        <Counter />\n        {/* <div className=\"card-body\">\n          <p className=\"card-text\">Count: {this.count}</p>\n        </div> */}\n        <div className=\"emoji-container\">\n          {this.state.emoji.map(emoji => (\n            <Emojis\n              removeemoji={this.removeEmoji}\n              id={emoji.id}\n              key={emoji.id}\n              name={emoji.name}\n              image={emoji.image}\n              handleIncrement={this.handleIncrement}\n              onClick={this.handleIncrement}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}